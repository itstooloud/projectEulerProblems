//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.



var runningTotal = 0;
var fibNumber = [0, 1];
var seq = [0,0];


// function to determine if "number" is even
function isEven(number) {
    if (number % 2 === 0) {
        return true;
    }
    else {
        return false;
    }
}

// loop to populate the array seq[] with Fibonacci numbers under 4000000

while (fibNumber[1] < 4000000 ) {
    fibNumber[0] = fibNumber[0] + fibNumber[1];
    fibNumber[1] = fibNumber[0] + fibNumber[1];
    var push1 = fibNumber[0]; 
    var push2 = fibNumber[1];
    seq.push(push1);
    seq.push(push2);
   
}

//Sum the even Fibonacci numbers in the sequence

for (var i = 0; i < seq.length; i++) {
    if (isEven(seq[i]) && seq[i] <= 4000000) {
        runningTotal = runningTotal + seq[i];
    }
}

// output total

console.log(runningTotal);